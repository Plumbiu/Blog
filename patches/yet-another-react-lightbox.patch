diff --git a/dist/plugins/thumbnails/index.js b/dist/plugins/thumbnails/index.js
index a61008e3c9b344917bb3b6dfe7812446102eb9be..f7f3efdbd066ad64fa7735632ee101434842f485 100644
--- a/dist/plugins/thumbnails/index.js
+++ b/dist/plugins/thumbnails/index.js
@@ -52,38 +52,16 @@ function renderThumbnail({ slide, render, rect, imageFit }) {
     return React.createElement(UnknownThumbnailIcon, { className: thumbnailIconClass });
 }
 const activePrefix = makeComposePrefix("active");
-const fadeInPrefix = makeComposePrefix("fadein");
-const fadeOutPrefix = makeComposePrefix("fadeout");
 const placeholderPrefix = makeComposePrefix("placeholder");
 const DELAY = "delay";
 const DURATION = "duration";
 function Thumbnail({ slide, onClick, active, fadeIn, fadeOut, placeholder, onLoseFocus }) {
     const ref = React.useRef(null);
     const { render, styles } = useLightboxProps();
-    const { getOwnerDocument } = useDocumentContext();
     const { width, height, imageFit } = useThumbnailsProps();
     const rect = { width, height };
-    const onLoseFocusCallback = useEventCallback(onLoseFocus);
-    React.useEffect(() => {
-        if (fadeOut && getOwnerDocument().activeElement === ref.current) {
-            onLoseFocusCallback();
-        }
-    }, [fadeOut, onLoseFocusCallback, getOwnerDocument]);
-    return (React.createElement("button", { ref: ref, type: "button", className: clsx(cssClass(CLASS_FLEX_CENTER), cssClass(cssThumbnailPrefix()), active && cssClass(cssThumbnailPrefix(activePrefix())), fadeIn && cssClass(cssThumbnailPrefix(fadeInPrefix())), fadeOut && cssClass(cssThumbnailPrefix(fadeOutPrefix())), placeholder && cssClass(cssThumbnailPrefix(placeholderPrefix()))), style: {
-            ...(fadeIn
-                ? {
-                    [cssVar(cssThumbnailPrefix(fadeInPrefix(DURATION)))]: `${fadeIn.duration}ms`,
-                    [cssVar(cssThumbnailPrefix(fadeInPrefix(DELAY)))]: `${fadeIn.delay}ms`,
-                }
-                : null),
-            ...(fadeOut
-                ? {
-                    [cssVar(cssThumbnailPrefix(fadeOutPrefix(DURATION)))]: `${fadeOut.duration}ms`,
-                    [cssVar(cssThumbnailPrefix(fadeOutPrefix(DELAY)))]: `${fadeOut.delay}ms`,
-                }
-                : null),
-            ...styles.thumbnail,
-        }, onClick: onClick }, slide && renderThumbnail({ slide, render, rect, imageFit })));
+    return (React.createElement("button", { ref: ref, type: "button", className: clsx(cssClass(CLASS_FLEX_CENTER), cssClass(cssThumbnailPrefix()), active && cssClass(cssThumbnailPrefix(activePrefix())), placeholder && cssClass(cssThumbnailPrefix(placeholderPrefix()))), style: styles.thumbnail,
+      onClick: onClick }, slide && renderThumbnail({ slide, render, rect, imageFit })));
 }
 
 function isHorizontal(position) {
@@ -101,33 +79,14 @@ function getThumbnailKey(slide) {
 }
 function ThumbnailsTrack({ visible, containerRef }) {
     const track = React.useRef(null);
-    const isRTL = useRTL();
     const { publish, subscribe } = useEvents();
     const { carousel, styles } = useLightboxProps();
-    const { slides, globalIndex, animation } = useLightboxState();
+    const { slides, globalIndex } = useLightboxState();
     const { registerSensors, subscribeSensors } = useSensors();
     useKeyboardNavigation(subscribeSensors);
     const thumbnails = useThumbnailsProps();
     const { position, width, height, border, borderStyle, borderColor, borderRadius, padding, gap, vignette } = thumbnails;
-    const animationDuration = (animation === null || animation === void 0 ? void 0 : animation.duration) || 0;
-    const offset = (animationDuration > 0 && (animation === null || animation === void 0 ? void 0 : animation.increment)) || 0;
-    const { prepareAnimation } = useAnimation(track, (snapshot) => ({
-        keyframes: isHorizontal(position)
-            ? [
-                {
-                    transform: `translateX(${(isRTL ? -1 : 1) * boxSize(thumbnails, width) * offset + snapshot}px)`,
-                },
-                { transform: "translateX(0)" },
-            ]
-            : [
-                {
-                    transform: `translateY(${boxSize(thumbnails, height) * offset + snapshot}px)`,
-                },
-                { transform: "translateY(0)" },
-            ],
-        duration: animationDuration,
-        easing: animation === null || animation === void 0 ? void 0 : animation.easing,
-    }));
+
     const handleControllerSwipe = useEventCallback(() => {
         let animationOffset = 0;
         if (containerRef.current && track.current) {
@@ -137,16 +96,13 @@ function ThumbnailsTrack({ visible, containerRef }) {
                 ? trackRect.left - containerRect.left - (containerRect.width - trackRect.width) / 2
                 : trackRect.top - containerRect.top - (containerRect.height - trackRect.height) / 2;
         }
-        prepareAnimation(animationOffset);
     });
     React.useEffect(() => cleanup(subscribe(ACTION_SWIPE, handleControllerSwipe)), [subscribe, handleControllerSwipe]);
     const preload = calculatePreload(carousel, slides);
     const items = [];
     if (hasSlides(slides)) {
-        for (let index = globalIndex - preload - Math.abs(offset); index <= globalIndex + preload + Math.abs(offset); index += 1) {
-            const placeholder = (carousel.finite && (index < 0 || index > slides.length - 1)) ||
-                (offset < 0 && index < globalIndex - preload) ||
-                (offset > 0 && index > globalIndex + preload);
+        for (let index = globalIndex - preload; index <= globalIndex + preload; index += 1) {
+            const placeholder = carousel.finite && (index < 0 || index > slides.length - 1);
             const slide = !placeholder ? getSlide(slides, index) : null;
             const key = [`${index}`, getThumbnailKey(slide)].filter(Boolean).join("|");
             items.push({ key, index, slide });
@@ -181,25 +137,7 @@ function ThumbnailsTrack({ visible, containerRef }) {
             ...styles.thumbnailsContainer,
         } },
         React.createElement("nav", { ref: track, style: styles.thumbnailsTrack, className: clsx(cssClass(cssPrefix("track")), cssClass(CLASS_FLEX_CENTER)), tabIndex: -1, ...registerSensors }, items.map(({ key, index, slide }) => {
-            const fadeAnimationDuration = animationDuration / Math.abs(offset || 1);
-            const fadeIn = (offset > 0 && index > globalIndex + preload - offset && index <= globalIndex + preload) ||
-                (offset < 0 && index < globalIndex - preload - offset && index >= globalIndex - preload)
-                ? {
-                    duration: fadeAnimationDuration,
-                    delay: ((offset > 0 ? index - (globalIndex + preload - offset) : globalIndex - preload - offset - index) -
-                        1) *
-                        fadeAnimationDuration,
-                }
-                : undefined;
-            const fadeOut = (offset > 0 && index < globalIndex - preload) || (offset < 0 && index > globalIndex + preload)
-                ? {
-                    duration: fadeAnimationDuration,
-                    delay: (offset > 0
-                        ? offset - (globalIndex - preload - index)
-                        : -offset - (index - (globalIndex + preload))) * fadeAnimationDuration,
-                }
-                : undefined;
-            return (React.createElement(Thumbnail, { key: key, slide: slide, active: index === globalIndex, fadeIn: fadeIn, fadeOut: fadeOut, placeholder: !slide, onClick: handleClick(index), onLoseFocus: () => { var _a; return (_a = track.current) === null || _a === void 0 ? void 0 : _a.focus(); } }));
+            return (React.createElement(Thumbnail, { key: key, slide: slide, active: index === globalIndex, placeholder: !slide, onClick: handleClick(index), onLoseFocus: () => { var _a; return (_a = track.current) === null || _a === void 0 ? void 0 : _a.focus(); } }));
         })),
         vignette && React.createElement("div", { className: cssClass(cssPrefix("vignette")) })));
 }
diff --git a/dist/plugins/thumbnails/thumbnails.css b/dist/plugins/thumbnails/thumbnails.css
index 567214a731603f62db4bb5fddf8b64d9e6ce35c4..c53c75c863e73575b04eb38d195d72841144f7e5 100644
--- a/dist/plugins/thumbnails/thumbnails.css
+++ b/dist/plugins/thumbnails/thumbnails.css
@@ -1 +1,141 @@
-.yarl__thumbnails{display:flex;height:100%}.yarl__thumbnails_bottom,.yarl__thumbnails_end .yarl__thumbnails_track,.yarl__thumbnails_start .yarl__thumbnails_track,.yarl__thumbnails_top{flex-direction:column}.yarl__thumbnails_wrapper{flex:1;position:relative}.yarl__thumbnails_container{background-color:var(--yarl__thumbnails_container_background_color,var(--yarl__color_backdrop,#000));flex:0 0 auto;overflow:hidden;padding:var(--yarl__thumbnails_container_padding,16px);position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-touch-callout:none}.yarl__thumbnails_vignette{pointer-events:none;position:absolute;--yarl__thumbnails_vignette_size:12%}@media (min-width:1200px){.yarl__thumbnails_vignette{--yarl__thumbnails_vignette_size:8%}}@media (min-width:2000px){.yarl__thumbnails_vignette{--yarl__thumbnails_vignette_size:5%}}.yarl__thumbnails_bottom .yarl__thumbnails_vignette,.yarl__thumbnails_top .yarl__thumbnails_vignette{background:linear-gradient(to right,var(--yarl__color_backdrop,#000) 0,transparent var(--yarl__thumbnails_vignette_size,12%) calc(100% - var(--yarl__thumbnails_vignette_size, 12%)),var(--yarl__color_backdrop,#000) 100%);height:100%;left:0;right:0}.yarl__thumbnails_end .yarl__thumbnails_vignette,.yarl__thumbnails_start .yarl__thumbnails_vignette{background:linear-gradient(to bottom,var(--yarl__color_backdrop,#000) 0,transparent var(--yarl__thumbnails_vignette_size,12%) calc(100% - var(--yarl__thumbnails_vignette_size, 12%)),var(--yarl__color_backdrop,#000) 100%);bottom:0;top:0;width:100%}.yarl__thumbnails_track{gap:var(--yarl__thumbnails_thumbnail_gap,16px);outline:none}.yarl__thumbnails_thumbnail{-webkit-appearance:none;-moz-appearance:none;appearance:none;background:var(--yarl__thumbnails_thumbnail_background,#000);border-color:var(--yarl__thumbnails_thumbnail_border_color,var(--yarl__color_button,hsla(0,0%,100%,.8)));border-radius:var(--yarl__thumbnails_thumbnail_border_radius,4px);border-style:var(--yarl__thumbnails_thumbnail_border_style,solid);border-width:var(--yarl__thumbnails_thumbnail_border,1px);cursor:pointer;flex:0 0 auto;-webkit-tap-highlight-color:transparent;box-sizing:content-box;height:var(--yarl__thumbnails_thumbnail_height,80px);outline:none;overflow:hidden;padding:var(--yarl__thumbnails_thumbnail_padding,4px);position:relative;width:var(--yarl__thumbnails_thumbnail_width,120px)}.yarl__thumbnails_thumbnail_active{border-color:var(--yarl__thumbnails_thumbnail_active_border_color,var(--yarl__color_button_active,#fff))}.yarl__thumbnails_thumbnail_fadein{animation:yarl__thumbnails_thumbnail_fadein var(--yarl__thumbnails_thumbnail_fadein_duration,.5s) ease-in-out var(--yarl__thumbnails_thumbnail_fadein_delay,0s) forwards;opacity:0}.yarl__thumbnails_thumbnail_fadeout{animation:yarl__thumbnails_thumbnail_fadeout var(--yarl__thumbnails_thumbnail_fadeout_duration,.5s) ease-in-out var(--yarl__thumbnails_thumbnail_fadeout_delay,0s) forwards;cursor:unset}.yarl__thumbnails_thumbnail_placeholder{cursor:unset;visibility:hidden}.yarl__thumbnails_thumbnail:focus{box-shadow:var(--yarl__thumbnails_thumbnail_focus_box_shadow,#000 0 0 0 2px,var(--yarl__color_button,hsla(0,0%,100%,.8)) 0 0 0 4px)}.yarl__thumbnails_thumbnail:focus:not(:focus-visible){box-shadow:unset}.yarl__thumbnails_thumbnail:focus-visible{box-shadow:var(--yarl__thumbnails_thumbnail_focus_box_shadow,#000 0 0 0 2px,var(--yarl__color_button,hsla(0,0%,100%,.8)) 0 0 0 4px)}.yarl__thumbnails_thumbnail_icon{color:var(--yarl__thumbnails_thumbnail_icon_color,var(--yarl__color_button,hsla(0,0%,100%,.8)));filter:var(--yarl__thumbnails_thumbnail_icon_filter,drop-shadow(2px 2px 2px rgba(0,0,0,.8)));height:var(--yarl__thumbnails_thumbnail_icon_size,32px);left:50%;position:absolute;top:50%;transform:translateX(-50%) translateY(-50%);width:var(--yarl__thumbnails_thumbnail_icon_size,32px)}@keyframes yarl__thumbnails_thumbnail_fadein{0%{opacity:0}to{opacity:1}}@keyframes yarl__thumbnails_thumbnail_fadeout{0%{opacity:1}to{opacity:0}}
\ No newline at end of file
+.yarl__thumbnails {
+  display: flex;
+  height: 100%
+}
+
+.yarl__thumbnails_bottom,
+.yarl__thumbnails_end .yarl__thumbnails_track,
+.yarl__thumbnails_start .yarl__thumbnails_track,
+.yarl__thumbnails_top {
+  flex-direction: column
+}
+
+.yarl__thumbnails_wrapper {
+  flex: 1;
+  position: relative
+}
+
+.yarl__thumbnails_container {
+  background-color: #000;
+  flex: 0 0 auto;
+  overflow: hidden;
+  padding: 16px;
+  position: relative;
+  user-select: none;
+}
+
+.yarl__thumbnails_vignette {
+  pointer-events: none;
+  position: absolute;
+  --yarl__thumbnails_vignette_size: 12%
+}
+
+@media (min-width:1200px) {
+  .yarl__thumbnails_vignette {
+    --yarl__thumbnails_vignette_size: 8%
+  }
+}
+
+@media (min-width:2000px) {
+  .yarl__thumbnails_vignette {
+    --yarl__thumbnails_vignette_size: 5%
+  }
+}
+
+.yarl__thumbnails_bottom .yarl__thumbnails_vignette,
+.yarl__thumbnails_top .yarl__thumbnails_vignette {
+  background: linear-gradient(to right,  #000 0, transparent 12% 88%, #000 100%);
+  height: 100%;
+  left: 0;
+  right: 0
+}
+
+.yarl__thumbnails_end .yarl__thumbnails_vignette,
+.yarl__thumbnails_start .yarl__thumbnails_vignette {
+  background: linear-gradient(to bottom, #000 0, transparent 12% 88%, #000 100%);
+  bottom: 0;
+  top: 0;
+  width: 100%
+}
+
+.yarl__thumbnails_track {
+  gap: 32px;
+  outline: none
+}
+
+.yarl__thumbnails_thumbnail {
+  appearance: none;
+  background: #000;
+  border: none;
+  cursor: pointer;
+  flex: 0 0 auto;
+  -webkit-tap-highlight-color: transparent;
+  box-sizing: content-box;
+  height: 80px;
+  outline: none;
+  overflow: hidden;
+  padding: 4px;
+  position: relative;
+}
+
+.yarl__thumbnails_thumbnail_active {
+  border: 2px solid #f9b44e;
+}
+
+.yarl__thumbnails_thumbnail_fadein {
+  animation: yarl__thumbnails_thumbnail_fadein  .5s ease-in-out forwards;
+  opacity: 0
+}
+
+.yarl__thumbnails_thumbnail_fadeout {
+  animation: yarl__thumbnails_thumbnail_fadeout .5 ease-in-out  forwards;
+  cursor: unset
+}
+
+.yarl__thumbnails_thumbnail_placeholder {
+  cursor: unset;
+  visibility: hidden
+}
+
+.yarl__thumbnails_thumbnail:focus {
+  box-shadow:  #000 0 0 0 2px, hsla(0, 0%, 100%, .8) 0 0 0 4px
+}
+
+.yarl__thumbnails_thumbnail:focus:not(:focus-visible) {
+  box-shadow: unset
+}
+
+.yarl__thumbnails_thumbnail:focus-visible {
+  box-shadow:  #000 0 0 0 2px, hsla(0, 0%, 100%, .8) 0 0 0 4px
+}
+
+.yarl__thumbnails_thumbnail_icon {
+  color: hsla(0, 0%, 100%, .8);
+  filter: drop-shadow(2px 2px 2px rgba(0, 0, 0, .8));
+  height:  32px;
+  left: 50%;
+  position: absolute;
+  top: 50%;
+  transform: translateX(-50%) translateY(-50%);
+  width: 32px;
+}
+
+@keyframes yarl__thumbnails_thumbnail_fadein {
+  0% {
+    opacity: 0
+  }
+
+  to {
+    opacity: 1
+  }
+}
+
+@keyframes yarl__thumbnails_thumbnail_fadeout {
+  0% {
+    opacity: 1
+  }
+
+  to {
+    opacity: 0
+  }
+}
