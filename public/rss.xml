<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Plumbiu の 小屋</title><link>https://blog.plumbiu.top</link><generator>Plumbiu - https://github.com/Plumbiu/blog</generator><description>Plumbiu 的 material 风格博客</description><webMaster>plumbiuzz@gmail.com(Plumbiu)</webMaster><managingEditor>plumbiuzz@gmail.com(Plumbiu)</managingEditor><language>zh-CN</language><atom:link href="https://blog.plumbiu.top/rss.xml" ref="self" type="application/rss+xml"/><lastBuildDate>Thu Aug 24 2023 12:25:00 GMT+0000 (Coordinated Universal Time)</lastBuildDate><item><title>rollup 插件开发</title><link>https://blog.plumbiu.top/post/rollup 插件开发</link><pubDate>Thu Aug 24 2023 12:25:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/rollup 插件开发</guid><description>虚拟模块实例在开始学习rollup之前，我们先来讲解一下虚拟模块，虚拟模块指的是不通过文件系统就可以访问的成员，举一个例子：-在开发vue项目的时候，我们可以引入.vue文件，这得益于vi</description></item><item><title>rollup/pluginutils 的使用</title><link>https://blog.plumbiu.top/post/rollup/pluginutils 的使用</link><pubDate>Tue Aug 22 2023 23:00:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/rollup/pluginutils 的使用</guid><description>接触到这个依赖是最近在做[truth-cli](https://github.com/truthRestorer/truth-cli)时，发现vite把public文件夹下的.gitkeep也当做了打包文件</description></item><item><title>Vue3源码 —— ast语法树(complie)</title><link>https://blog.plumbiu.top/post/Vue3源码 —— ast语法树(complie)</link><pubDate>Mon Jul 24 2023 22:49:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/Vue3源码 —— ast语法树(complie)</guid><description>parse&gt;parse.js包含ast语法树生成的函数ast语法树用于解析vue中template的模板，以便后续虚拟DOM及DIFF算法做准备![](https://plum</description></item><item><title>Vue3源码 —— complier/transform</title><link>https://blog.plumbiu.top/post/Vue3源码 —— complier/transform</link><pubDate>Mon Jul 24 2023 22:49:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/Vue3源码 —— complier/transform</guid><description>在compiler一章中，我们成功生成了vue的ast语法树，但我们知道，ast语法树不能被语言直接执行，他需要转换成真正的代码才可以。那么如何将ast语法树转换为真正的代码呢？在转换到真</description></item><item><title>几个简单的 Vite 插件</title><link>https://blog.plumbiu.top/post/几个简单的 Vite 插件</link><pubDate>Sat Jul 22 2023 15:52:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/几个简单的 Vite 插件</guid><description>前置知识命名规范(来自官方)正如rollup中的[插件名称约定](https://rollupjs.org/plugin-development/conventions)一样，vite插件也需要一</description></item><item><title>硬件管理系统项目总结</title><link>https://blog.plumbiu.top/post/硬件管理系统项目总结</link><pubDate>Wed Jun 28 2023 21:45:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/硬件管理系统项目总结</guid><description>历经千辛万苦，终于有了第一版的[硬件管理系统](https://github.com/Plumbiu/hardware_manager_nextjs)，笔记用于记录开发中遇到的问题Next-AuthNext-Aut</description></item><item><title>计算机网络(课程)</title><link>https://blog.plumbiu.top/post/计算机网络(课程)</link><pubDate>Wed Jun 14 2023 21:36:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/计算机网络(课程)</guid><description>计算机网络系统的主要功能、网络类型计算机网络是将地理位置不同，且有独立功能的多个计算机系统利用通信设备和线路互相连接起来，且以功能完善的网络软件（包括网络通信协议、网络操作系统等）实现网络资源共享的系统特点及功能</description></item><item><title>Vue源码 —— ast抽象语法树(vue2)</title><link>https://blog.plumbiu.top/post/Vue源码 —— ast抽象语法树(vue2)</link><pubDate>Tue May 30 2023 18:12:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/Vue源码 —— ast抽象语法树(vue2)</guid><description>这篇笔记实现的都是简易版的，有些情况是没有考虑进去的代码仓库：https://github.com/Plumbiu/vue_source_code什么是AST抽象语法树JS中的抽象语法树(AbstractS</description></item><item><title>Vue源码 —— 虚拟DOM和diff算法</title><link>https://blog.plumbiu.top/post/Vue源码 —— 虚拟DOM和diff算法</link><pubDate>Sun May 28 2023 23:27:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/Vue源码 —— 虚拟DOM和diff算法</guid><description>这里的diff算法和虚拟DOM都是简易版的，有很多情况没有讨论代码仓库：https://github.com/Plumbiu/vue_source_code提前了解的知识insertBefore</description></item><item><title>Vue源码 —— mustache语法</title><link>https://blog.plumbiu.top/post/Vue源码 —— mustache语法</link><pubDate>Sun May 21 2023 21:50:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/Vue源码 —— mustache语法</guid><description>这篇笔记实现主要是简单的mustache.js，跟vue的模板语法相比，简单了许多(vue的太难了，先从基础学起)代码仓库：https://github.com/Plumbiu/vue_source_cod</description></item><item><title>JS 中的数据类型</title><link>https://blog.plumbiu.top/post/JS 中的数据类型</link><pubDate>Sat May 20 2023 21:24:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/JS 中的数据类型</guid><description>此笔记来自于笔者在手写vue源码时，忘记了JS中的数据类型，导致很多地方不理解JS中的数据类型分为**基本数据类型**和**引用数据类型**，变量赋值也分为深拷贝和浅拷贝基本数据类型又叫做基本数据类型或者值类</description></item><item><title>正则表达式</title><link>https://blog.plumbiu.top/post/正则表达式</link><pubDate>Wed May 17 2023 22:31:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/正则表达式</guid><description>什么是正则表达式正则表达式是用于匹配字符串中字符组合的模式，有许多应用场景，例如：-判断用户输入的输入的手机号/邮箱是否合法-用户注册密码/账号长度和字符限制-...基本使用JS中定</description></item><item><title>vue-router</title><link>https://blog.plumbiu.top/post/vue-router</link><pubDate>Tue May 16 2023 14:07:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/vue-router</guid><description>配置路由基本的框架：typescriptimport{createRouter,createWebHashHistory}from'vue-router'importtype{RouteRe</description></item><item><title>实验室第二次例会</title><link>https://blog.plumbiu.top/post/实验室第二次例会</link><pubDate>Sun May 14 2023 19:55:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/实验室第二次例会</guid><description>TypeScriptTypeScript文件以.ts结尾，在使用ts之前，需要安装typescript和ts-node：bashnpmi-gtypescriptts-no</description></item><item><title>NextJS国际化、前端图片显示</title><link>https://blog.plumbiu.top/post/NextJS国际化、前端图片显示</link><pubDate>Wed May 10 2023 14:16:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/NextJS国际化、前端图片显示</guid><description>此笔记是基于开发[Plumbiu/nextjs_tensorflow](https://github.com/Plumbiu/nextjs_tensorflow)时所遇到的问题而总结的NextJS中的国际化本次项</description></item><item><title>fetch API</title><link>https://blog.plumbiu.top/post/fetch API</link><pubDate>Wed May 10 2023 18:40:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/fetch API</guid><description>fetch基础知识在以前的开发中，向服务端请求数据是非常繁琐的事情我们可以通过Ajax向服务器请求数据，而Ajax本质是使用XMLHttpRequest对象实现的javascript</description></item><item><title>React Native</title><link>https://blog.plumbiu.top/post/React Native</link><pubDate>Fri Apr 21 2023 23:08:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/React Native</guid><description>代码仓库：[Plumbiu/RN:ReactNative](https://github.com/Plumbiu/RN)环境安装这里使用yarn和expo安装，yarn安装速度快且占用磁盘空间</description></item><item><title>实验室第一次例会</title><link>https://blog.plumbiu.top/post/实验室第一次例会</link><pubDate>Mon Apr 10 2023 13:50:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/实验室第一次例会</guid><description>四轮问题代码风格1.if、{}、''、运算符、;**bad:**javascriptif(){letage=18;letstr=&quot;fff";}else{}</description></item><item><title>一个简单的注册登录API(prisma+express+ts)</title><link>https://blog.plumbiu.top/post/一个简单的注册登录API(prisma+express+ts)</link><pubDate>Fri Mar 31 2023 22:30:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/一个简单的注册登录API(prisma+express+ts)</guid><description>初始化工作我们直接使用prisma官方给出的typescript+express官方示例：[prisma_ts_express](https://github.com/prisma/prisma-exa</description></item><item><title>重学JavaScript——ES6</title><link>https://blog.plumbiu.top/post/重学JavaScript——ES6</link><pubDate>Tue Mar 28 2023 11:19:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/重学JavaScript——ES6</guid><description>很早之前已经做过有关Object和Array的笔记了，这次主要是复习重点：-Object：[MDN-Object|Plumbiuの小屋](https://blog.plumbiu.club/202</description></item><item><title>前后端授权的代码实现(cookie、session、token)</title><link>https://blog.plumbiu.top/post/前后端授权的代码实现(cookie、session、token)</link><pubDate>Sun Mar 26 2023 22:45:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/前后端授权的代码实现(cookie、session、token)</guid><description>最终项目代码的仓库：[Plumbiu/authorization](https://github.com/Plumbiu/authorization)这里只讲解一些基本的用法Cookieexpress实现</description></item><item><title>monorepo项目的搭建(husky+eslint+prettier+git hooks)</title><link>https://blog.plumbiu.top/post/monorepo项目的搭建(husky+eslint+prettier+git hooks)</link><pubDate>Sat Mar 25 2023 11:29:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/monorepo项目的搭建(husky+eslint+prettier+git hooks)</guid><description>项目文件：[Plumbiu/monorepo](https://github.com/Plumbiu/monorepo)turborepo的安装安装turborepo：bashnpxcreate-</description></item><item><title>前后端鉴权</title><link>https://blog.plumbiu.top/post/前后端鉴权</link><pubDate>Sat Mar 25 2023 21:40:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/前后端鉴权</guid><description>问题的由来HTTP协议是无状态的，这意味着如果客户端每次要与服务端通信，都必须重新与服务端连接，客户端请求一次，服务端才会响应一次，每一次请求都与之前的请求无关。这样会产生的问题：-无法判断多次请求是否都由</description></item><item><title>axios(未完待续~~)</title><link>https://blog.plumbiu.top/post/axios(未完待续~~)</link><pubDate>Thu Mar 23 2023 21:09:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/axios(未完待续~~)</guid><description>Axios起步Axios是一个基于promise的网络请求库，可作用于nodejs和浏览器中安装选择你喜欢的包管理器npm:bashnpminstallaxios</description></item><item><title>重学CSS——CSS选择器</title><link>https://blog.plumbiu.top/post/重学CSS——CSS选择器</link><pubDate>Tue Mar 21 2023 11:30:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/重学CSS——CSS选择器</guid><description>代码仓库：[Plumbiu/css_review_selector](https://github.com/Plumbiu/css_review_selector)基本选择器类型选择器类型选择器也叫做“标签名</description></item><item><title>重学CSS——flex弹性布局</title><link>https://blog.plumbiu.top/post/重学CSS——flex弹性布局</link><pubDate>Tue Mar 21 2023 11:30:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/重学CSS——flex弹性布局</guid><description>flex布局基本概念flex布局，也被称为弹性布局，是CSS3新增的一种布局，只需要给父元素添加display:flex;即可flex布局特点1.子元素默认横向显示，但是子孙元素不会</description></item><item><title>Electron 基础篇(未完~~)</title><link>https://blog.plumbiu.top/post/Electron 基础篇(未完~~)</link><pubDate>Mon Mar 20 2023 14:26:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/Electron 基础篇(未完~~)</guid><description>代码仓库：[Plumbiu/electron](https://github.com/Plumbiu/electron)(其实很早就开始学了，奈何本人实力太弱，笔记基本都是抄的官网或者别人的，不好意思放到博客里。最近又开始学了</description></item><item><title>图像处理</title><link>https://blog.plumbiu.top/post/图像处理</link><pubDate>Mon Mar 20 2023 14:26:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/图像处理</guid><description>图像处理基础RGB-&gt;灰度转换公式c++intIntensity=R*0.0299+G*0.587+b*0.144;-近似公式c++intInte</description></item><item><title>Zustand——React状态管理库</title><link>https://blog.plumbiu.top/post/Zustand——React状态管理库</link><pubDate>Fri Mar 17 2023 14:22:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/Zustand——React状态管理库</guid><description>代码仓库：[Plumbiu/zustand(github.com)](https://github.com/Plumbiu/zustand)基本使用Zustand是React的持久化管理库，支持插件系统</description></item><item><title>前端测试</title><link>https://blog.plumbiu.top/post/前端测试</link><pubDate>Tue Mar 14 2023 22:38:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/前端测试</guid><description>Mocha有时候我们写了一个函数，需要测试函数是否正确。如果使用console.log测试，项目部署后又要删除，所以并不合理。单元测试是用来对一个模块、一个函数或者一个类来进行正确性检验的测试性工作。mo</description></item><item><title>构建工具(Webpack、Vite)</title><link>https://blog.plumbiu.top/post/构建工具(Webpack、Vite)</link><pubDate>Mon Mar 13 2023 15:39:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/构建工具(Webpack、Vite)</guid><description>构建工具简介前端编写html、css和js时，会因为模块化不能正常使用(有些浏览器不支持，例如以下代码)，即使抛开兼容性，也会面临模块加载过多的问题，所以就希望有一款工具可以对代码进行打包，将多个模块打包成一个文件</description></item><item><title>MDN-Array</title><link>https://blog.plumbiu.top/post/MDN-Array</link><pubDate>Tue Feb 28 2023 16:17:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/MDN-Array</guid><description>数组下标Array对象不能使用任意字符串作为元素索引，必须使用非负整数。数组元素是对象属性，就是toString是属性(准确一点是方法)一样。同时，JavaScript语法要求使用方括号表示法，而不是点</description></item><item><title>Slidev——网页PPT</title><link>https://blog.plumbiu.top/post/Slidev——网页PPT</link><pubDate>Tue Feb 28 2023 16:17:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/Slidev——网页PPT</guid><description>安装shellyarncreateslidev跟随命令行提示，会自动打开幻灯片，网址为:http://localhost:3030**全局安装**如果觉得每一次手动安装模板太麻烦，可以在全</description></item><item><title>MDN-Object</title><link>https://blog.plumbiu.top/post/MDN-Object</link><pubDate>Sun Feb 26 2023 16:47:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/MDN-Object</guid><description>从一个对象上删除一个属性Object自身没有提供方法删除其自身属性(但是Map中的Map.prototype.delete()可以删除自身属性)，为了删除对象上的属性，必须使用delete操作符：</description></item><item><title>TS</title><link>https://blog.plumbiu.top/post/TS</link><pubDate>Tue Jan 03 2023 16:33:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/TS</guid><description>TS常用类型可以将TS常用基础类型分为两类：1.JS已有类型-**原始类型**：number、string、boolean、null、undefined、symbol-**对象类型</description></item><item><title>Vue 组件之间的数据传递</title><link>https://blog.plumbiu.top/post/Vue 组件之间的数据传递</link><pubDate>Sun Jul 09 2023 22:59:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/Vue 组件之间的数据传递</guid><description>父向子传值只需要父向子传值有三种方法：1.prop传参：直接将数据作为子组件标签元素即可2.provide、inject依赖注入prop传参父组件Father.vue：</description></item><item><title>Vue3源码 —— 响应式原理</title><link>https://blog.plumbiu.top/post/Vue3源码 —— 响应式原理</link><pubDate>Sat Jul 08 2023 16:21:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/Vue3源码 —— 响应式原理</guid><description>Vue中的响应式原理是基于[JavaScriptProxy](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/</description></item><item><title>前端面试题总结(基础篇)~未完</title><link>https://blog.plumbiu.top/post/前端面试题总结(基础篇)~未完</link><pubDate>Thu Jun 08 2023 19:34:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/前端面试题总结(基础篇)~未完</guid><description>HTTP，HTML，浏览器介绍一下HTTP和HTTPS&gt;HTTPS的SSL加密实在传输层实现的HTTP和HTTPS的基本概念2**HTTP**：超文本传输协议，是互联网上应用最</description></item><item><title>重学JavaScript——浏览器事件和DOM(未完)</title><link>https://blog.plumbiu.top/post/重学JavaScript——浏览器事件和DOM(未完)</link><pubDate>Fri Jun 02 2023 20:48:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/重学JavaScript——浏览器事件和DOM(未完)</guid><description>Node接口Node接口是DOM节点的一些共同的属性和方法，是DOM操作的基础属性Node.prototype提供了许多属性，供我们操作nodeTypenodeType属性</description></item><item><title>NextJS 中的渲染模式</title><link>https://blog.plumbiu.top/post/NextJS 中的渲染模式</link><pubDate>Thu May 04 2023 14:16:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/NextJS 中的渲染模式</guid><description>此笔记来源于笔者未完全理解NextJS中的渲染模式渲染模式CSR(ClientSideRendering)客户端渲染，Vue、React等框架采用的渲染模式，需要使用JavaScript，调用接口</description></item><item><title>手写 Promise(未完)</title><link>https://blog.plumbiu.top/post/手写 Promise(未完)</link><pubDate>Sun Apr 09 2023 21:08:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/手写 Promise(未完)</guid><description>代码仓库：[Plumbiu/ES6_Type](https://github.com/Plumbiu/ES6_Type)手写挺难得，最后的race、all方法还没有实现，代码也不一定保证正确高阶函数高阶函数可以</description></item><item><title>重学JavaScript——Reflect</title><link>https://blog.plumbiu.top/post/重学JavaScript——Reflect</link><pubDate>Wed Apr 05 2023 21:08:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/重学JavaScript——Reflect</guid><description>前置知识JavaScript中允许指定函数中this的指向，提供了3个方法：-call()-apply()-bind()call使用call方法**调用</description></item><item><title>重学JavaScript——Proxy</title><link>https://blog.plumbiu.top/post/重学JavaScript——Proxy</link><pubDate>Tue Apr 04 2023 11:01:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/重学JavaScript——Proxy</guid><description>代码仓库：[Plumbiu/ES6_Type](https://github.com/Plumbiu/ES6_Type)Proxy的作用Proxy用于修改某些操作的默认行为，等同于在语言层面做出修改，所以属于一</description></item><item><title>重学JavaScript——Set/Map</title><link>https://blog.plumbiu.top/post/重学JavaScript——Set/Map</link><pubDate>Sun Apr 02 2023 21:43:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/重学JavaScript——Set/Map</guid><description>代码仓库：[Plumbiu/ES6_Type](https://github.com/Plumbiu/ES6_Type)SetSet是一种数据结构，类似于数组，但是没有重复的元素可以用Set构造函数生成</description></item><item><title>重学JavaScript——Symbol</title><link>https://blog.plumbiu.top/post/重学JavaScript——Symbol</link><pubDate>Sun Apr 02 2023 11:27:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/重学JavaScript——Symbol</guid><description>代码仓库：[Plumbiu/ES6_Type](https://github.com/Plumbiu/ES6_Type)JS的原始类型ES6新增了JavaScript的原始类型：Symbol，现在JS的</description></item><item><title>Pinia</title><link>https://blog.plumbiu.top/post/Pinia</link><pubDate>Thu Mar 09 2023 18:51:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/Pinia</guid><description>Pinia基本介绍&gt;Pinia是Vue的存储库，允许我们跨组件/页面共享状态主要：-支持Vue2和Vue3-Pinia中只有state、getter、action，抛弃了Vu</description></item><item><title>Prisma-Client</title><link>https://blog.plumbiu.top/post/Prisma-Client</link><pubDate>Sat Mar 04 2023 14:49:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/Prisma-Client</guid><description>**Prisma**：下一代ORM框架**ORM**：对象关系映射（ObjectRelationalMapping，简称ORM），主要实现程序对象到关系数据库数据的映射QuickStart**package</description></item><item><title>Plumbiu的第1次年度总结</title><link>https://blog.plumbiu.top/post/Plumbiu的第1次年度总结</link><pubDate>Sun Mar 05 2023 23:01:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/Plumbiu的第1次年度总结</guid><description>emmm，本来这个年度总结应该放在3月3号的，问就是太忙了忘记了😢😢😢，今天(3月5号)我将绞尽脑汁去回忆过去一年里发生了什么，因为第一次写年度总结，所以写的差理所应当🥰🥰🥰这一年里收获挺多的。从实</description></item><item><title>AutoAnimate简单动画库的使用</title><link>https://blog.plumbiu.top/post/AutoAnimate简单动画库的使用</link><pubDate>Wed Feb 08 2023 16:47:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/AutoAnimate简单动画库的使用</guid><description>贴一下官网地址：[AutoAnimate](https://link.juejin.cn/?target=https%3A%2F%2Fauto-animate.formkit.com%2F&quot;https://auto-animat</description></item><item><title>Rollup基本使用</title><link>https://blog.plumbiu.top/post/Rollup基本使用</link><pubDate>Wed Feb 08 2023 16:47:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/Rollup基本使用</guid><description>Rollup简介Rollup仅仅是一款ESM打包器，Rollup中并不支持类似HMR这种高级特性，Rollup并不是要与Webpack竞争，而是提供一个充分利用ESM各项特征的高效打包器。R</description></item><item><title>VueI18n</title><link>https://blog.plumbiu.top/post/VueI18n</link><pubDate>Wed Feb 08 2023 16:47:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/VueI18n</guid><description>基本使用贴个官网：[VueI18n|VueI18n(intlify.dev)](https://vue-i18n.intlify.dev/)GettingStarted首先引入CDNh</description></item><item><title>mqtt协议简单使用</title><link>https://blog.plumbiu.top/post/mqtt协议简单使用</link><pubDate>Wed Feb 08 2023 16:53:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/mqtt协议简单使用</guid><description>**项目代码**：[Plumbiu/mqttjs](https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2FPlumbiu%2Fmqttjs&quot;https://githu</description></item><item><title>使用nodejs简单搭建一个mqtt服务器</title><link>https://blog.plumbiu.top/post/使用nodejs简单搭建一个mqtt服务器</link><pubDate>Wed Feb 08 2023 16:55:00 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/使用nodejs简单搭建一个mqtt服务器</guid><description>贴一下仓库地址：[Plumbiu/aedes_mqtt](https://github.com/Plumbiu/aedes_mqtt)再贴一下官网地址(反正我是看不懂案例)：[moscajs/aedes](https://gi</description></item><item><title>React 全家桶(持续更新~~)</title><link>https://blog.plumbiu.top/post/React 全家桶(持续更新~~)</link><pubDate>Fri Dec 30 2022 16:33:52 GMT+0000 (Coordinated Universal Time)</pubDate><author>Plumbiu</author><guid>https://blog.plumbiu.top/post/React 全家桶(持续更新~~)</guid><description>1.RTK基本使用1.1Slice切片**步骤:**1.引入createSlicejavascriptimport{createSlice}from&quot;@re</description></item></channel></rss>